{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7affc452.chunk.js","sourcesContent":["import React,{Component} from 'react'\nimport axios from 'axios'\nconst Context = React.createContext();\n\nconst reducer = (state,action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts:state.contacts.filter(\n                    contact=>contact.id !== action.payload\n                )\n            }\n\n            case 'ADD_CONTACT':\n                return{\n                    ...state,\n                    contacts:[action.payload,...state.contacts]  \n                    \n                };\n\n                case 'UPDATE_CONTACT':\n                    return{\n                        ...state,\n                        contacts:state.contacts.map(contact =>\n                            contact.id === action.payload.id \n                            ? (contact = action.payload) \n                            :contact)  \n                        \n                    };\n\n                \n    \n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n state = {\n    contacts : [\n        \n    ],\n    dispatch : action => this.setState(state => reducer(state,action))\n    \n }\n\nasync componentDidMount(){\n    const res = await axios\n    .get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts:res.data});\n }\n render(){\n     return (\n         <Context.Provider value={this.state}>\n             {this.props.children}\n         </Context.Provider>\n     )\n }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport './contact.css'\nimport {Consumer} from '../../Context'\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n class Contact extends Component {\n\n    state = {\n        showContactInfo:false\n    };\n\n    onShowClick=(e)=>{\n        this.setState({showContactInfo:!this.state.showContactInfo})\n    }\n\n    onDeleteClick = async(id,dispatch) =>{\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)        \n        dispatch({type:'DELETE_CONTACT',payload:id})\n        } catch (error) {\n            dispatch({type:'DELETE_CONTACT',payload:id})   \n        }\n        \n    }\n    render() {\n        const {name,email,phone,id} = this.props.contact;\n        const {showContactInfo} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return(\n                        <div className=\"card card-body mb-3\">\n                        <h4>{name} \n                        <i \n                            onClick={()=>{\n                                this.setState({showContactInfo:!this.state.showContactInfo})\n                            }} \n                        className=\"fas fa-sort-down\"\n                        style={{cursor:'pointer'}}\n                        ></i>\n                        <i className=\"fas fa-times\"\n                         style={{cursor:'pointer',float:'right',color:'red'}}\n                        onClick={this.onDeleteClick.bind(this,id,dispatch)}\n                        ></i>\n\n                        <Link to={`/contact/edit/${id}`}>\n                            <i className=\"fas fa-pencil-alt\"\n                            style={{\n                                cursor:'pointer',\n                                float:'right',\n                                color:'black',\n                                marginRight:'1rem'\n                            }}\n                            ></i>\n                        </Link>\n                       \n                         </h4>\n                        {showContactInfo ? (  \n                             <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email : {email}</li>\n                            <li className=\"list-group-item\">Phone : {phone}</li>\n                        </ul>) : null }\n                     \n                    </div>\n                    )\n                }}\n\n            </Consumer>\n           \n        )\n    }\n}\n\n\nexport default Contact","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport {Consumer } from '../../Context';\n\nclass Contacts extends Component {\n\n\n\n    render() {\n\n        return (\n            <Consumer>\n                {value =>{\n                    const {contacts} = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\"> <span className=\"text-danger\"> Contact </span> List </h1>\n                        {contacts.map(contact => (\n                        <Contact\n                        key = {contact.id}\n                        contact={contact} \n                        />))}\n                    </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\nexport default Contacts","import React from 'react'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n const  Header= props =>{\n     const {branding} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\" >\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\"> <i className=\"fas fa-home\"></i> Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n            \n    )\n}\n\nHeader.defaultProps = {\n    branding : \"My App\"\n};\nHeader.propTypes = {\n    branding :PropTypes.string.isRequired\n}\n\n// const headingStyle = {\n//     color:'green',\n//     fontSize:'50px'\n// }\n\nexport default Header;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames';\n\n const TextInputGroup=({\n     label,\n     name,\n     value,\n     placeholder,\n     type,\n     onChange,\n     error\n })=> {\n    return (\n        <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input type={type}\n        className={classnames('form-control form-control-lg',{'is-invalid':error})}\n        placeholder={placeholder} \n        name={name} \n        id=\"\"\n        value ={value}\n        onChange={onChange}\n        />\n\n     {error && <div className=\"invalid-feedback\">{error}</div> }\n    </div>\n    )\n};\n\nTextInputGroup.propTypes = {\n    label:PropTypes.string.isRequired,\n    name:PropTypes.string.isRequired,\n    placeholder:PropTypes.string.isRequired,\n    value:PropTypes.string.isRequired,\n    type:PropTypes.string.isRequired,\n    onChange:PropTypes.func.isRequired,\n    error:PropTypes.string\n\n}\n\nTextInputGroup.defaultProps = {\n    type:'text'\n}\nexport default TextInputGroup\n","import React, { Component } from 'react'\nimport {Consumer} from '../../Context'\nimport {v4 as uuid} from 'uuid'\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n     state = {\n         name : '',\n         email: '',\n         phone: '',\n         errors:{}\n     }\n\n     onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n     onSubmit = async(dispatch,e) => {\n         e.preventDefault();\n         const {name,email,phone} = this.state;\n\n\n         //check for errors\n         if (name === '') {\n             this.setState({errors:{name:'Name is required'}});\n             return;\n         }\n        \n\n        if (email === '') {\n            this.setState({errors:{email:'Email is required'}});\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({errors:{phone:'Phone No. is required'}});\n            return;\n        }\n\n         const newContact = {\n            name,\n             email,\n             phone\n         }\n\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\n        dispatch({type:'ADD_CONTACT',payload:res.data})\n        \n         this.setState({\n             name: '',\n             email: '',\n             phone: '',\n             errors:{}\n\n         });\n\n         this.props.history.push('/')\n     }\n    render() {\n        const {name,email,phone,errors} = this.state;\n\n        return (\n            <Consumer>\n                {value=>{\n                    const {dispatch} = value;\n                    return (\n                        <div className=\"card mb-3 \">\n                        <div className=\"card-header\">\n                            Add Contact\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"\" onSubmit={this.onSubmit.bind(this,dispatch)}>\n                              <TextInputGroup\n                                label=\"Name\"\n                                name=\"name\"\n                                placeholder=\"Enter Name....\"\n                                value = {name}\n                                onChange={this.onChange}\n                                error={errors.name}\n                              />\n          <TextInputGroup\n                                label=\"Email\"\n                                name=\"email\"\n                                placeholder=\"Enter Email....\"\n                                value = {email}\n                                onChange={this.onChange}\n                                error={errors.email}\n\n                              />\n                                <TextInputGroup\n                                label=\"Phone\"\n                                name=\"phone\"\n                                placeholder=\"Enter Phone....\"\n                                value = {phone}\n                                onChange={this.onChange}\n                                error={errors.phone}\n\n                              />\n                                <input type=\"submit\" value=\"Add Contact\"\n                                className=\"btn btn-light btn-block\"\n                                />\n                            </form>\n                        </div>\n                      \n                    </div>\n                    )\n                }}\n\n            </Consumer>\n        )\n    \n    }\n}\nexport default AddContact\n","import React, { Component } from 'react'\nimport {Consumer} from '../../Context'\nimport {v4 as uuid} from 'uuid'\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n     state = {\n         name : '',\n         email: '',\n         phone: '',\n         errors:{}\n     }\n \n     async componentDidMount(){\n         const {id} = this.props.match.params;\n         const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n         const contact = res.data;\n         this.setState({name:contact.name,email:contact.email,phone:contact.phone})\n        }\n     onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n     onSubmit = async(dispatch,e) => {\n         e.preventDefault();\n         const {name,email,phone} = this.state;\n\n\n         //check for errors\n         if (name === '') {\n             this.setState({errors:{name:'Name is required'}});\n             return;\n         }\n        \n\n        if (email === '') {\n            this.setState({errors:{email:'Email is required'}});\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({errors:{phone:'Phone No. is required'}});\n            return;\n        }\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const {id} = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\n\n        dispatch({type:'UPDATE_CONTACT',payload:res.data})\n\n         this.setState({\n             name: '',\n             email: '',\n             phone: '',\n             errors:{}\n\n         });\n\n         this.props.history.push('/')\n     }\n    render() {\n        const {name,email,phone,errors} = this.state;\n\n        return (\n            <Consumer>\n                {value=>{\n                    const {dispatch} = value;\n                    return (\n                        <div className=\"card mb-3 \">\n                        <div className=\"card-header\">\n                            Edit Contact\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"\" onSubmit={this.onSubmit.bind(this,dispatch)}>\n                              <TextInputGroup\n                                label=\"Name\"\n                                name=\"name\"\n                                placeholder=\"Enter Name....\"\n                                value = {name}\n                                onChange={this.onChange}\n                                error={errors.name}\n                              />\n          <TextInputGroup\n                                label=\"Email\"\n                                name=\"email\"\n                                placeholder=\"Enter Email....\"\n                                value = {email}\n                                onChange={this.onChange}\n                                error={errors.email}\n\n                              />\n                                <TextInputGroup\n                                label=\"Phone\"\n                                name=\"phone\"\n                                placeholder=\"Enter Phone....\"\n                                value = {phone}\n                                onChange={this.onChange}\n                                error={errors.phone}\n\n                              />\n                                <input type=\"submit\" value=\"Update Contact\"\n                                className=\"btn btn-light btn-block\"\n                                />\n                            </form>\n                        </div>\n                      \n                    </div>\n                    )\n                }}\n\n            </Consumer>\n        )\n    \n    }\n}\nexport default EditContact\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manageer</h1>\n        <p className=\"lead\">Simple app to manage contacts</p>\n        <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\nexport default About\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\"> <span className=\"text-danger\"> 404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry,that page doesnt exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class Test extends Component {\n    state = {\n        title :'',\n        body:' '\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(data => {\n      this.setState({title:data.title,body:data.body})\n    })\n        // console.log(\"component did mount\")\n\n    }\n\n\n    // componentWillMount(){\n    //     console.log(\"component will mount\")\n    // }\n\n    // componentDidUpdate(){\n    //     console.log(\"component did mount\")\n    // }\n\n    render() {\n        const {title,body} = this.state\n        return (\n            <div>\n                <h1>TEST Component</h1>\n                <p>{title}</p>\n                <h1>{body}</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css';\n\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\nimport {Provider} from './Context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class App extends Component {\n  render() {\n    \n    return (\n      <Provider>\n        <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n\n        <div className=\"container\">\n          <Switch>\n            \n            <Route exact path=\"/\" component={Contacts}/>\n            <Route exact path=\"/contact/add\" component={AddContact}/>\n            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n\n            <Route exact path=\"/About\" component={About}/>\n            <Route exact path=\"/Test\" component={Test}/>\n            \n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}